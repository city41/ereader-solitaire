import * as path from "path";
import * as fsp from "fs/promises";

const suits = [
  {
    suit: "Spades",
    tag: "S",
    nibbleMask: 0,
  },
  {
    suit: "Hearts",
    tag: "H",
    nibbleMask: 1,
  },
  {
    suit: "Clubs",
    tag: "C",
    nibbleMask: 1 << 1,
  },
  {
    suit: "Diamonds",
    tag: "D",
    nibbleMask: 1 << 2,
  },
] as const;

const ranks = [
  "A",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "10",
  "J",
  "Q",
  "K",
];

function hex(v: number, len: number): string {
  const vs = v.toString(16);
  const paddingLen = Math.max(len - vs.length, 0);
  const padding = new Array(paddingLen).fill("0").join("");

  return `${padding}${vs}`;
}

async function main(destPath: string) {
  const lines: string[] = [
    `; generated by ${__filename}`,
    "",
    "",
    "",
    "",
    "CARD_TURNED_OVER_MASK = 0x80",
    "",
    "",
  ];

  let index = 1;
  suits.forEach((s) => {
    ranks.forEach((r) => {
      if (s.suit === "Spades" && r === "A") {
        lines.push("; if you like to gamble, I tell you I'm your man...");
      }

      const line = `${s.tag}_${r} = 0x${hex(index, 2)}${
        r === "10" ? "" : " "
      }; ${r} of ${s.suit}`;
      lines.push(line);

      index += 1;
    });
    lines.push("");
  });

  const src = lines.join("\n");

  await fsp.writeFile(destPath, src);

  console.log("wrote", destPath);
}

if (require.main === module) {
  const [_tsNode, _generateCardDefs, destPath] = process.argv;

  if (!destPath) {
    console.error("ts-node generateCardDefs.ts <dest-path>");
    process.exit(1);
  }

  main(path.resolve(destPath))
    .then(() => console.log("done"))
    .catch((e) => console.error(e));
}
